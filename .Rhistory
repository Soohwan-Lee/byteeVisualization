shapiro.test(subset(totalAverageA, period == 'first' & group == 'control')$score)
shapiro.test(subset(totalAverageA, period == 'second' & group == 'control')$score)
shapiro.test(subset(totalAverageA, period == 'third' & group == 'control')$score)
shapiro.test(subset(totalAverageA, period == 'first' & group == 'experimental')$score)
shapiro.test(subset(totalAverageA, period == 'second' & group == 'experimental')$score)
shapiro.test(subset(totalAverageA, period == 'third' & group == 'experimental')$score)
# Test for R
shapiro.test(subset(totalAverageR, period == 'first' & group == 'control')$score)
shapiro.test(subset(totalAverageR, period == 'second' & group == 'control')$score)
shapiro.test(subset(totalAverageR, period == 'third' & group == 'control')$score)
shapiro.test(subset(totalAverageR, period == 'first' & group == 'experimental')$score)
shapiro.test(subset(totalAverageR, period == 'second' & group == 'experimental')$score)
shapiro.test(subset(totalAverageR, period == 'third' & group == 'experimental')$score)
# Test for C
shapiro.test(subset(totalAverageC, period == 'first' & group == 'control')$score)
shapiro.test(subset(totalAverageC, period == 'second' & group == 'control')$score)
shapiro.test(subset(totalAverageC, period == 'third' & group == 'control')$score)
shapiro.test(subset(totalAverageC, period == 'first' & group == 'experimental')$score)
shapiro.test(subset(totalAverageC, period == 'second' & group == 'experimental')$score)
shapiro.test(subset(totalAverageC, period == 'third' & group == 'experimental')$score)
# Test for S
shapiro.test(subset(totalAverageS, period == 'first' & group == 'control')$score)
shapiro.test(subset(totalAverageS, period == 'second' & group == 'control')$score)
shapiro.test(subset(totalAverageS, period == 'third' & group == 'control')$score)
shapiro.test(subset(totalAverageS, period == 'first' & group == 'experimental')$score)
shapiro.test(subset(totalAverageS, period == 'second' & group == 'experimental')$score)
shapiro.test(subset(totalAverageS, period == 'third' & group == 'experimental')$score)
### Homogeneity of Variance Test (Levene)
# Test for A
fitA <- lm(score ~ period * group, data = totalAverageA)
levene.test(fitA)
# Test for R
fitR <- lm(score ~ period * group, data = totalAverageR)
levene.test(fitR)
# Test for C
fitC <- lm(score ~ period + group, data = totalAverageC)
levene.test(fitC)
# Test for S
fitC <- lm(score ~ period + group, data = totalAverageS)
levene.test(fitC)
### Sphericity Test (Mauchly)
mauchly.test(fitA)
mauchly.test(data=totalAverageA, score ~period)
### Homogeneity of Variacne Test (Box)
boxM(data=totalAverageA, group=period)
### Drawing Box Plot
# Draw Box Plot for A
totalAverageA$score <- as.numeric(totalAverageA$score)
totalAverageA$period <- factor(totalAverageA$period, level = c("first", "second", "third"))
totalAverageA$group <- factor(totalAverageA$group, level = c("control", "experimental"))
periodLabel <- c("First","Second", "Third") # Label should be revised!!!
groupLabel <- c("Control Group","Experimental Group") # Label should be revised!!!
totalAverageAPlot <- ggplot(totalAverageA, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Total - Attention", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageAPlot
# Draw Box Plot for R
totalAverageR$score <- as.numeric(totalAverageR$score)
totalAverageR$period <- factor(totalAverageR$period, level = c("first", "second", "third"))
totalAverageR$group <- factor(totalAverageR$group, level = c("control", "experimental"))
### Normality Test (Shapiro-wilk)
# Test for A
shapiro.test(subset(totalAverageA, period == 'first' & group == 'control')$score)
### Normality Test (Shapiro-wilk)
# Test for A
shapiro.test(subset(totalAverageA, period == 'first' & group == 'control')$score)
shapiro.test(subset(totalAverageA, period == 'second' & group == 'control')$score)
shapiro.test(subset(totalAverageA, period == 'third' & group == 'control')$score)
shapiro.test(subset(totalAverageA, period == 'first' & group == 'experimental')$score)
shapiro.test(subset(totalAverageA, period == 'second' & group == 'experimental')$score)
shapiro.test(subset(totalAverageA, period == 'third' & group == 'experimental')$score)
### Homogeneity of Variance Test (Levene)
# Test for A
fitA <- lm(score ~ period * group, data = totalAverageA)
levene.test(fitA)
# Test for S
shapiro.test(subset(totalAverageS, period == 'first' & group == 'control')$score)
### Normality Test (Shapiro-wilk)
# Test for A
shapiro.test(subset(totalAverageA, period == 'first' & group == 'control')$score)
shapiro.test(subset(totalAverageA, period == 'second' & group == 'control')$score)
shapiro.test(subset(totalAverageA, period == 'third' & group == 'control')$score)
shapiro.test(subset(totalAverageA, period == 'first' & group == 'experimental')$score)
shapiro.test(subset(totalAverageA, period == 'second' & group == 'experimental')$score)
shapiro.test(subset(totalAverageA, period == 'third' & group == 'experimental')$score)
# RM one-way ANOVA
anova <- aov(score ~ period + Error(participant/period), data = ubset(totalAverageA, group == 'experimental')
# RM one-way ANOVA
anova <- aov(score ~ period + Error(participant/period), data = subset(totalAverageA, group == 'experimental')
# RM one-way ANOVA
anova <- aov(score ~ period + Error(participant/period), data = subset(totalAverageA, group == 'experimental')
# Post-hoc for Friedman Test
pairwise.wilcox.test(totalAverageA_experimental$score, totalAverageA_experimental$period, p.adjust='bonferroni')
#############################
### Mixed Effect Model for A
# Repeated measure 2 way ANOVA
anova <- aov(score ~ group*period + Error(participant/period), data = totalAverageA)
summary(anova)
# Friedman Test for experimental
totalAverageA_experimental = subset(totalAverageA, group == 'experimental')
totalAverageA_experimental$score <- as.numeric(totalAverageA_experimental$score)
totalAverageA_experimental$period <- factor(totalAverageA_experimental$period)
totalAverageA_experimental$participant <- factor(totalAverageA_experimental$participant)
friedman.test(score ~ period | participant, data=totalAverageA_experimental)
# RM one-way ANOVA
anova <- aov(score ~ period + Error(participant/period), data = totalAverageA_experimental)
summary(anova)
#############################
### Mixed Effect Model for A
# Repeated measure 2 way ANOVA
anova <- aov(score ~ group*period + Error(participant/period), data = totalAverageA)
summary(anova)
# Friedman Test for experimental
totalAverageA_experimental = subset(totalAverageA, group == 'experimental')
totalAverageA_experimental$score <- as.numeric(totalAverageA_experimental$score)
totalAverageA_experimental$period <- factor(totalAverageA_experimental$period)
totalAverageA_experimental$participant <- factor(totalAverageA_experimental$participant)
friedman.test(score ~ period | participant, data=totalAverageA_experimental)
# RM one-way ANOVA
anova <- aov(score ~ period + Error(participant/period), data = totalAverageA_experimental)
summary(anova)
# Post-hoc for Friedman Test
pairwise.wilcox.test(totalAverageA_experimental$score, totalAverageA_experimental$period, p.adjust='bonferroni')
#############################
### Mixed Effect Model for R
# Repeated measure 2 way ANOVA
anova <- aov(score ~ (group*period) + Error(participant/period), data = totalAverageR)
# Post-hoc for Friedman Test
pairwise.wilcox.test(totalAverageA_experimental$score, totalAverageA_experimental$period, p.adjust='bonferroni')
# RM one-way ANOVA
anova <- aov(score ~ period + Error(participant/period), data = totalAverageA_experimental)
summary(anova)
### R
# Cronbach Alpha
R <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/ARCS/totalR.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(R, panel=panel.smooth)
cronbach(R)
alpha(R)
# KMO (Factor Analysis)
KMO(R)
A
# Test for R
shapiro.test(subset(totalAverageR, period == 'first' & group == 'control')$score)
shapiro.test(subset(totalAverageR, period == 'second' & group == 'control')$score)
shapiro.test(subset(totalAverageR, period == 'third' & group == 'control')$score)
shapiro.test(subset(totalAverageR, period == 'first' & group == 'experimental')$score)
shapiro.test(subset(totalAverageR, period == 'second' & group == 'experimental')$score)
shapiro.test(subset(totalAverageR, period == 'third' & group == 'experimental')$score)
# Test for R
fitR <- lm(score ~ period * group, data = totalAverageR)
levene.test(fitR)
#############################
### Mixed Effect Model for R
# Repeated measure 2 way ANOVA
anova <- aov(score ~ (group*period) + Error(participant/period), data = totalAverageR)
summary(anova)
# Friedman Test for experimental
totalAverageR_experimental = subset(totalAverageR, group == 'experimental')
totalAverageR_experimental$score <- as.numeric(totalAverageR_experimental$score)
totalAverageR_experimental$period <- factor(totalAverageR_experimental$period)
totalAverageR_experimental$participant <- factor(totalAverageR_experimental$participant)
friedman.test(score ~ period | participant, data=totalAverageR_experimental)
# Post-hoc for Friedman Test
pairwise.wilcox.test(totalAverageR_experimental$score, totalAverageR_experimental$period, p.adjust='bonferroni')
# RM one-way ANOVA
anova <- aov(score ~ period + Error(participant/period), data = totalAverageR_experimental)
summary(anova)
### C
# Cronbach Alpha
C <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/ARCS/totalC.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(C, panel=panel.smooth)
cronbach(C)
# KMO (Factor Analysis)
KMO(C)
# Test for C
shapiro.test(subset(totalAverageC, period == 'first' & group == 'control')$score)
shapiro.test(subset(totalAverageC, period == 'second' & group == 'control')$score)
shapiro.test(subset(totalAverageC, period == 'third' & group == 'control')$score)
shapiro.test(subset(totalAverageC, period == 'first' & group == 'experimental')$score)
shapiro.test(subset(totalAverageC, period == 'second' & group == 'experimental')$score)
shapiro.test(subset(totalAverageC, period == 'third' & group == 'experimental')$score)
# Test for C
fitC <- lm(score ~ period + group, data = totalAverageC)
levene.test(fitC)
#############################
### Mixed Effect Model for C
# Repeated measure 2 way ANOVA
anova <- aov(score ~ (group*period) + Error(participant/period), data = totalAverageC)
summary(anova)
# Friedman Test for experimental
totalAverageC_experimental = subset(totalAverageC, group == 'experimental')
totalAverageC_experimental$score <- as.numeric(totalAverageC_experimental$score)
totalAverageC_experimental$period <- factor(totalAverageC_experimental$period)
totalAverageC_experimental$participant <- factor(totalAverageC_experimental$participant)
friedman.test(score ~ period | participant, data=totalAverageC_experimental)
# RM one-way ANOVA
anova <- aov(score ~ period + Error(participant/period), data = totalAverageC_experimental)
summary(anova)
# Post-hoc for Friedman Test
pairwise.wilcox.test(totalAverageC_experimental$score, totalAverageC_experimental$period, p.adjust='bonferroni')
############################
### Mixed Effect Model for S
# Repeated measure 2 way ANOVA
anova <- aov(score ~ (group*period) + Error(participant/period), data = totalAverageS)
### S
# Cronbach Alpha
S <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/ARCS/totalS.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(S, panel=panel.smooth)
cronbach(S)
alpha(S)
# KMO (Factor Analysis)
KMO(S)
# Test for S
shapiro.test(subset(totalAverageS, period == 'first' & group == 'control')$score)
shapiro.test(subset(totalAverageS, period == 'second' & group == 'control')$score)
shapiro.test(subset(totalAverageS, period == 'third' & group == 'control')$score)
shapiro.test(subset(totalAverageS, period == 'first' & group == 'experimental')$score)
shapiro.test(subset(totalAverageS, period == 'second' & group == 'experimental')$score)
shapiro.test(subset(totalAverageS, period == 'third' & group == 'experimental')$score)
# Test for S
fitS <- lm(score ~ period + group, data = totalAverageS)
levene.test(fitS)
############################
### Mixed Effect Model for S
# Repeated measure 2 way ANOVA
anova <- aov(score ~ (group*period) + Error(participant/period), data = totalAverageS)
summary(anova)
anova
############################
### Mixed Effect Model for S
# Repeated measure 2 way ANOVA
anova <- aov(score ~ (group*period) + Error(participant/period), data = totalAverageS)
summary(anova)
# Friedman Test for experimental
totalAverageS_experimental = subset(totalAverageS, group == 'experimental')
totalAverageS_experimental$score <- as.numeric(totalAverageS_experimental$score)
totalAverageS_experimental$period <- factor(totalAverageS_experimental$period)
totalAverageS_experimental$participant <- factor(totalAverageS_experimental$participant)
friedman.test(score ~ period | participant, data=totalAverageS_experimental)
# RM one-way ANOVA
anova <- aov(score ~ period + Error(participant/period), data = totalAverageS_experimental)
summary(anova)
# Post-hoc for Friedman Test
pairwise.wilcox.test(totalAverageS_experimental$score, totalAverageS_experimental$period, p.adjust='bonferroni')
############################
### Mixed Effect Model
# Mixed Effect Model
anova <- aov(score ~ (measure*period) + Error(participant/(measure*period)), data = byteeAverage)
summary(anova)
############################
### Mixed Effect Model
# Mixed Effect Model
anova <- aov(score ~ (measure*period) + Error(participant/(measure*period)), data = byteeAverage)
library(ggplot2)
library(plyr)
library(dplyr)
library(psych)
### Set File Path for Window Environment
setwd('C:/Users/LeeSooHwan/Desktop/github/byteeVisualization')
### Set File Path for Mac Environment
setwd("/Users/Soohwan/Desktop/github/byteeVisualization")
### Reliability Analysis & Factor Analysis
# PF
PF <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/bytee/PF.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(PF, panel=panel.smooth)
cronbach(PF) # Cronbach Alpha
alpha(PF) # Cronbach Alpha
KMO(PF) # KMO
# SM
SM <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/bytee/SM.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(SM, panel=panel.smooth)
cronbach(SM) # Cronbach Alpha
alpha(SM) # Cronbach Alpha
KMO(SM) # KMO
# SS
SS <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/bytee/SS.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(SS, panel=panel.smooth)
cronbach(SS) # Cronbach Alpha
alpha(SS) # Cronbach Alpha
KMO(SS) # KMO
### Load Data
# Load
byteeAverage <- read.csv(file = "./data/userEvaluation/revisedData/byteeAverage.csv", header=T, fileEncoding="UTF-8-BOM")
# set Factors
byteeAverage$participant <- as.factor(byteeAverage$participant)
byteeAverage$measure <- as.factor(byteeAverage$measure)
byteeAverage$period <- as.factor(byteeAverage$period)
byteeAverage$score <- as.numeric(byteeAverage$score)
### Box Plot Preparation
# Start Y axis from n
require(scales)
my_trans <- function(from=0)
{
trans <- function(x) x-from
inv <- function(x) x+from
trans_new("myscale", trans, inv,
domain = c(from, Inf))
}
# Elicit each measure from main dataframe
byteeAveragePF <- subset(byteeAverage, measure == 'PF')
byteeAverageSM <- subset(byteeAverage, measure == 'SM')
byteeAverageSS <- subset(byteeAverage, measure == 'SS')
### Normality Test
shapiro.test(subset(byteeAveragePF, period == 'first')$score)
shapiro.test(subset(byteeAveragePF, period == 'second')$score)
shapiro.test(subset(byteeAveragePF, period == 'third')$score)
shapiro.test(subset(byteeAverageSM, period == 'first')$score)
shapiro.test(subset(byteeAverageSM, period == 'second')$score)
shapiro.test(subset(byteeAverageSM, period == 'third')$score)
shapiro.test(subset(byteeAverageSS, period == 'first')$score)
shapiro.test(subset(byteeAverageSS, period == 'second')$score)
shapiro.test(subset(byteeAverageSS, period == 'third')$score)
### Homogeneity of Variance Test (Levene)
# Test for PF
fitPF <- lm(score ~ period, data = byteeAveragePF)
levene.test(fitPF)
# Test for SM
fitSM <- lm(score ~ period, data = byteeAverageSM)
levene.test(fitSM)
# Test for SS
fitSS <- lm(score ~ period, data = byteeAverageSS)
levene.test(fitSS)
### Drawing Box Plot
# Draw Box Plot for Bytee Average
byteeAverage$score <- as.numeric(byteeAverage$score)
byteeAverage$period <- factor(byteeAverage$period, level = c("first", "second", "third"))
byteeAverage$measure <- factor(byteeAverage$measure, level = c("PF", "SM", "SS"))
periodLabel <- c("First","Second", "Third") # Label should be revised!!!
measureLabel <- c("PF","SM", "SS") # Label should be revised!!!
byteeAveragePlot <- ggplot(byteeAverage, aes(x=period, y=score, fill=measure)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=measureLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = measure), position=position_jitterdodge(), show.legend = F) +
labs(title="Bytee - ARCS", x="Period", y = "Score", fill = "Measure") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
byteeAveragePlot
############################
### Mixed Effect Model
# Mixed Effect Model
anova <- aov(score ~ (measure*period) + Error(participant/(measure*period)), data = byteeAverage)
summary(anova)
anova$coefficients
anova
# Friedman Test & Post-hoc Test for PF
byteeAveragePF$participant <- as.factor(byteeAveragePF$participant)
byteeAveragePF$measure <- as.factor(byteeAveragePF$measure)
byteeAveragePF$period <- as.factor(byteeAveragePF$period)
byteeAveragePF$score <- as.numeric(byteeAveragePF$score)
anova <- aov(score ~ period + Error(participant/period) , data = byteeAveragePF)
summary(anova)
friedman.test(score ~ period | participant, data=byteeAveragePF)
pairwise.wilcox.test(byteeAveragePF$score, byteeAveragePF$period, p.adjust='bonferroni')
# Friedman Test & Post-hoc Test for SM
byteeAverageSM$participant <- as.factor(byteeAverageSM$participant)
byteeAverageSM$measure <- as.factor(byteeAverageSM$measure)
byteeAverageSM$period <- as.factor(byteeAverageSM$period)
byteeAverageSM$score <- as.numeric(byteeAverageSM$score)
anova <- aov(score ~ period + Error(participant/period) , data = byteeAverageSM)
summary(anova) # RM one-way ANOVA
friedman.test(score ~ period | participant, data=byteeAverageSM) # Friedman Test
pairwise.wilcox.test(byteeAverageSM$score, byteeAverageSM$period, p.adjust='bonferroni') # post-hoc
# Friedman Test & Post-hoc Test for SS
byteeAverageSS$participant <- as.factor(byteeAverageSS$participant)
byteeAverageSS$measure <- as.factor(byteeAverageSS$measure)
byteeAverageSS$period <- as.factor(byteeAverageSS$period)
byteeAverageSS$score <- as.numeric(byteeAverageSS$score)
anova <- aov(score ~ period + Error(participant/period) , data = byteeAverageSS)
summary(anova)
friedman.test(score ~ period | participant, data=byteeAverageSS)
pairwise.wilcox.test(byteeAverageSS$score, byteeAverageSS$period, p.adjust='bonferroni')
cronbach(PF) # Cronbach Alpha
alpha(PF) # Cronbach Alpha
KMO(PF) # KMO
cronbach(SM) # Cronbach Alpha
cronbach(SS) # Cronbach Alpha
KMO(SM) # KMO
KMO(SS) # KMO
### Normality Test
shapiro.test(subset(byteeAveragePF, period == 'first')$score)
shapiro.test(subset(byteeAveragePF, period == 'second')$score)
shapiro.test(subset(byteeAveragePF, period == 'third')$score)
shapiro.test(subset(byteeAverageSM, period == 'first')$score)
shapiro.test(subset(byteeAverageSM, period == 'second')$score)
shapiro.test(subset(byteeAverageSM, period == 'third')$score)
shapiro.test(subset(byteeAverageSS, period == 'first')$score)
shapiro.test(subset(byteeAverageSS, period == 'second')$score)
shapiro.test(subset(byteeAverageSS, period == 'third')$score)
### Homogeneity of Variance Test (Levene)
# Test for PF
fitPF <- lm(score ~ period, data = byteeAveragePF)
levene.test(fitPF)
# Test for SM
fitSM <- lm(score ~ period, data = byteeAverageSM)
levene.test(fitSM)
# Test for SS
fitSS <- lm(score ~ period, data = byteeAverageSS)
levene.test(fitSS)
############################
### Mixed Effect Model
# Mixed Effect Model
anova <- aov(score ~ (measure*period) + Error(participant/(measure*period)), data = byteeAverage)
summary(anova)
anova <- aov(score ~ period + Error(participant/period) , data = byteeAveragePF)
summary(anova)
friedman.test(score ~ period | participant, data=byteeAveragePF)
pairwise.wilcox.test(byteeAveragePF$score, byteeAveragePF$period, p.adjust='bonferroni')
# Friedman Test & Post-hoc Test for SM
byteeAverageSM$participant <- as.factor(byteeAverageSM$participant)
byteeAverageSM$measure <- as.factor(byteeAverageSM$measure)
byteeAverageSM$period <- as.factor(byteeAverageSM$period)
byteeAverageSM$score <- as.numeric(byteeAverageSM$score)
anova <- aov(score ~ period + Error(participant/period) , data = byteeAverageSM)
summary(anova) # RM one-way ANOVA
friedman.test(score ~ period | participant, data=byteeAverageSM) # Friedman Test
pairwise.wilcox.test(byteeAverageSM$score, byteeAverageSM$period, p.adjust='bonferroni') # post-hoc
# Friedman Test & Post-hoc Test for SS
byteeAverageSS$participant <- as.factor(byteeAverageSS$participant)
byteeAverageSS$measure <- as.factor(byteeAverageSS$measure)
byteeAverageSS$period <- as.factor(byteeAverageSS$period)
byteeAverageSS$score <- as.numeric(byteeAverageSS$score)
anova <- aov(score ~ period + Error(participant/period) , data = byteeAverageSS)
summary(anova)
friedman.test(score ~ period | participant, data=byteeAverageSS)
pairwise.wilcox.test(byteeAverageSS$score, byteeAverageSS$period, p.adjust='bonferroni')
anova <- aov(score ~ period + Error(participant/period) , data = byteeAveragePF)
summary(anova)
anova <- aov(score ~ period + Error(participant/period) , data = byteeAverageSM)
summary(anova) # RM one-way ANOVA
anova <- aov(score ~ period + Error(participant/period) , data = byteeAverageSS)
summary(anova)
friedman.test(score ~ period | participant, data=byteeAveragePF)
friedman.test(score ~ period | participant, data=byteeAverageSM) # Friedman Test
friedman.test(score ~ period | participant, data=byteeAverageSS)
pairwise.wilcox.test(byteeAveragePF$score, byteeAveragePF$period, p.adjust='bonferroni')
pairwise.wilcox.test(byteeAverageSM$score, byteeAverageSM$period, p.adjust='bonferroni') # post-hoc
pairwise.wilcox.test(byteeAverageSS$score, byteeAverageSS$period, p.adjust='bonferroni')
library(ggplot2)
library(plyr)
library(dplyr)
library(psych)
### Set File Path for Window Environment
setwd('C:/Users/LeeSooHwan/Desktop/github/byteeVisualization')
### Set File Path for Mac Environment
setwd("/Users/Soohwan/Desktop/github/byteeVisualization")
### Reliability Analysis & Factor Analysis
# YE
YE <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/systemEvaluation/YE.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(YE, panel=panel.smooth)
cronbach(YE) # Cronbach Aplha
alpha(YE) # Cronbach Aplha
KMO(YE) # KMO
# VI
VI <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/systemEvaluation/VI.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(VI, panel=panel.smooth)
cronbach(VI) # Cronbach Aplha
alpha(VI) # Cronbach Aplha
KMO(VI) # KMO
# SE
SE <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/systemEvaluation/SE.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(SE, panel=panel.smooth)
cronbach(SE) # Cronbach Aplha
alpha(SE) # Cronbach Aplha
KMO(SE) # KMO
### Load Data
# Load
systemEvaluationAverage <- read.csv(file = "./data/userEvaluation/revisedData/systemEvaluationAverage.csv", header=T, fileEncoding="UTF-8-BOM")
# set Factors
systemEvaluationAverage$measure <- as.factor(systemEvaluationAverage$measure)
systemEvaluationAverage$score <- as.numeric(systemEvaluationAverage$score)
### Box Plot Preparation
# Start Y axis from n
require(scales)
my_trans <- function(from=0)
{
trans <- function(x) x-from
inv <- function(x) x+from
trans_new("myscale", trans, inv,
domain = c(from, Inf))
}
# Elicit each measure from main dataframe
systemEvaluationAverageYE <- subset(systemEvaluationAverage, measure == 'YE')
systemEvaluationAverageVI <- subset(systemEvaluationAverage, measure == 'VI')
systemEvaluationAverageSE <- subset(systemEvaluationAverage, measure == 'SE')
# Normality Test
shapiro.test(systemEvaluationAverageYE$score)
shapiro.test(systemEvaluationAverageVI$score)
shapiro.test(systemEvaluationAverageSE$score)
### Drawing Box Plot
# Draw Box Plot for System Evaluation
systemEvaluationAverage$score <- as.numeric(systemEvaluationAverage$score)
systemEvaluationAverage$measure <- factor(systemEvaluationAverage$measure, level = c("YE", "VI", "SE"))
measureLabel <- c("YE","VI", "SE") # Label should be revised!!!
pairs(YE, panel=panel.smooth)
cronbach(YE) # Cronbach Aplha
cronbach(VI) # Cronbach Aplha
cronbach(SE) # Cronbach Aplha
KMO(YE) # KMO
KMO(VI) # KMO
KMO(SE) # KMO
# Normality Test
shapiro.test(systemEvaluationAverageYE$score)
shapiro.test(systemEvaluationAverageVI$score)
shapiro.test(systemEvaluationAverageSE$score)
