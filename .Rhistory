library(ggplot2)
library(plyr)
library(dplyr)
library(lme4)
library(nlme)
library(lsmeans)
library(emmeans)
### Set File Path for Window Environment
setwd('C:/Users/LeeSooHwan/OneDrive - unist.ac.kr (1)/EXPC/EXPC Project/2021/taeyoon-visualization')
### Load Data
youtubePercentage <- read.csv(file = "./revisedData/youtubePercentage.csv", header=T, fileEncoding="UTF-8-BOM")
### declare factor
youtubePercentage$participant <- as.factor(youtubePercentage$participant)
youtubePercentage$day <- as.factor(youtubePercentage$day)
youtubePercentage$type <- as.factor(youtubePercentage$type)
youtubePercentage$phase <- as.factor(youtubePercentage$phase)
youtubePercentage$percentage <- as.numeric(youtubePercentage$percentage)
### Mixed Effect Model as fit
fit <- lmer(percentage ~ type * phase + (1|participant), data = youtubePercentage)
taeyoon <- lme(percentage ~ type * phase, random = ~ 1|participant, data = youtubePercentage, na.action=na.omit)
### Get ANOVA Table
anova(fit)
summary(fit)
anova(taeyoon)
summary(taeyoon)
## Original 2-way ANOVA
anova <- aov(percentage ~ (type*phase) + Error(participant/(type*phase)), data = youtubePercentage)
anova <- lmer(percentage ~ 1 + type*phase + (participant/(type*phase)), data=youtubePercentage)
summary(anova)
### Mixed Effect Model
# Attention
fit <- lmer(score ~ group * period + (1|participant), data = totalAverageA)
library(ggplot2)
library(plyr)
library(dplyr)
### Set File Path for Window Environment
setwd('C:/Users/LeeSooHwan/Desktop/github/byteeVisualization')
### Load Data
# Load
totalAverage <- read.csv(file = "./data/userEvaluation/revisedData/totalAverage.csv", header=T, fileEncoding="UTF-8-BOM")
# set Factors
totalAverage$participant <- as.factor(totalAverage$participant)
totalAverage$group <- as.factor(totalAverage$group)
totalAverage$measure <- as.factor(totalAverage$measure)
totalAverage$period <- as.factor(totalAverage$period)
totalAverage$score <- as.numeric(totalAverage$score)
### Box Plot Preparation
# Start Y axis from n
require(scales)
my_trans <- function(from=0)
{
trans <- function(x) x-from
inv <- function(x) x+from
trans_new("myscale", trans, inv,
domain = c(from, Inf))
}
# Elicit each measure from main dataframe
totalAverageA <- subset(totalAverage, measure == 'A')
totalAverageR <- subset(totalAverage, measure == 'R')
totalAverageC <- subset(totalAverage, measure == 'C')
totalAverageS <- subset(totalAverage, measure == 'S')
# Elicit each measure from each measurement
totalAverageA_controlFirst
totalAverageA_controlSecond
totalAverageA_controlThird
totalAverageA_experimentalFirst
totalAverageA_experimentalSecond
totalAverageA_experimentalThird
totalAverageR_controlFirst
totalAverageR_controlSecond
totalAverageR_controlThird
totalAverageR_experimentalFirst
totalAverageR_experimentalSecond
totalAverageR_experimentalThird
totalAverageA_controlFirst
totalAverageA_controlSecond
totalAverageA_controlThird
totalAverageA_experimentalFirst
totalAverageA_experimentalSecond
totalAverageA_experimentalThird
totalAverageA_controlFirst
totalAverageA_controlSecond
totalAverageA_controlThird
totalAverageA_experimentalFirst
totalAverageA_experimentalSecond
totalAverageA_experimentalThird
# Set Factors
totalAverageA$participant <- as.factor(totalAverageA$participant)
totalAverageA$group <- as.factor(totalAverageA$group)
totalAverageA$measure <- as.factor(totalAverageA$measure)
totalAverageA$period <- as.factor(totalAverageA$period)
totalAverageA$score <- as.numeric(totalAverageA$score)
totalAverageR$participant <- as.factor(totalAverageR$participant)
totalAverageR$group <- as.factor(totalAverageR$group)
totalAverageR$measure <- as.factor(totalAverageR$measure)
totalAverageR$period <- as.factor(totalAverageR$period)
totalAverageR$score <- as.numeric(totalAverageR$score)
totalAverageC$participant <- as.factor(totalAverageC$participant)
totalAverageC$group <- as.factor(totalAverageC$group)
totalAverageC$measure <- as.factor(totalAverageC$measure)
totalAverageC$period <- as.factor(totalAverageC$period)
totalAverageC$score <- as.numeric(totalAverageC$score)
totalAverageS$participant <- as.factor(totalAverageS$participant)
totalAverageS$group <- as.factor(totalAverageS$group)
totalAverageS$measure <- as.factor(totalAverageS$measure)
totalAverageS$period <- as.factor(totalAverageS$period)
totalAverageS$score <- as.numeric(totalAverageS$score)
### Drawing Box Plot
# Draw Box Plot for A
totalAverageA$score <- as.numeric(totalAverageA$score)
totalAverageA$period <- factor(totalAverageA$period, level = c("first", "second", "third"))
totalAverageA$group <- factor(totalAverageA$group, level = c("control", "experimental"))
periodLabel <- c("First","Second", "Third") # Label should be revised!!!
groupLabel <- c("Control Group","Experimental Group") # Label should be revised!!!
totalAverageAPlot <- ggplot(totalAverageA, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Total - Attention", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageAPlot
# Draw Box Plot for R
totalAverageR$score <- as.numeric(totalAverageR$score)
totalAverageR$period <- factor(totalAverageR$period, level = c("first", "second", "third"))
totalAverageR$group <- factor(totalAverageR$group, level = c("control", "experimental"))
periodLabel <- c("First","Second", "Third") # Label should be revised!!!
groupLabel <- c("Control Group","Experimental Group") # Label should be revised!!!
totalAverageRPlot <- ggplot(totalAverageR, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Total - Relevance", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageRPlot
# Draw Box Plot for C
totalAverageC$score <- as.numeric(totalAverageC$score)
totalAverageC$period <- factor(totalAverageC$period, level = c("first", "second", "third"))
totalAverageC$group <- factor(totalAverageC$group, level = c("control", "experimental"))
periodLabel <- c("First","Second", "Third") # Label should be revised!!!
groupLabel <- c("Control Group","Experimental Group") # Label should be revised!!!
totalAverageCPlot <- ggplot(totalAverageC, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Total - Confidence", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageCPlot
# Draw Box Plot for S
totalAverageS$score <- as.numeric(totalAverageS$score)
totalAverageS$period <- factor(totalAverageS$period, level = c("first", "second", "third"))
totalAverageS$group <- factor(totalAverageS$group, level = c("control", "experimental"))
periodLabel <- c("First","Second", "Third") # Label should be revised!!!
groupLabel <- c("Control Group","Experimental Group") # Label should be revised!!!
totalAverageSPlot <- ggplot(totalAverageS, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Total - Satisfaction", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageSPlot
### Mixed Effect Model
# Attention
fit <- lmer(score ~ group * period + (1|participant), data = totalAverageA)
taeyoon <- lme(score ~ group * period, random = ~ 1|participant, data = totalAverageA, na.action=na.omit)
# Get ANOVA Table
anova(fit)
summary(fit)
anova(taeyoon)
summary(taeyoon)
# Original 2-way ANOVA
anova <- aov(percentage ~ (group*period) + Error(participant/(group*period)), data = totalAverageA)
anova <- lmer(percentage ~ 1 + group*period + (participant/(group*period)), data=totalAverageA)
# Original 2-way ANOVA
anova <- aov(score ~ (group*period) + Error(participant/(group*period)), data = totalAverageA)
anova <- lmer(score ~ 1 + group*period + (participant/(group*period)), data=totalAverageA)
# Original 2-way ANOVA
anova <- aov(score ~ (group*period) + Error(participant/(group*period)), data = totalAverageA)
summary(anova)
## Original 2-way ANOVA
anova <- aov(percentage ~ (type*phase) + Error(participant/(type*phase)), data = youtubePercentage)
anova <- lmer(percentage ~ 1 + type*phase + (participant/(type*phase)), data=youtubePercentage)
summary(anova)
# Mixed Effect Model
anova <- aov(score ~ (group*period) + Error(participant/(group*period)), data = totalAverageA)
#anova <- lmer(score ~ 1 + group*period + (participant/(group*period)), data=totalAverageA)
summary(anova)
# Mixed Effect Model
anova <- aov(score ~ (group*period) + Error(participant/(group*period)), data = totalAverageA)
#anova <- lmer(score ~ 1 + group*period + (participant/(group*period)), data=totalAverageA)
summary(anova)
# Get ANOVA Table
anova(fit)
summary(fit)
anova(soobin)
summary(soobin)
# Mixed Effect Model
anova <- aov(score ~ (group*period) + Error(participant/(group*period)), data = totalAverageA)
summary(anova)
# Mixed Effect Model
anova <- aov(score ~ (group*period) + Error(participant/(group*period)), data = totalAverageR)
summary(anova)
### Mixed Effect Model for Confidence
fit <- lmer(score ~ group * period + (1|participant), data = totalAverageC)
soobin <- lme(score ~ group * period, random = ~ 1|participant, data = totalAverageC, na.action=na.omit)
# Get ANOVA Table
anova(fit)
summary(fit)
anova(soobin)
summary(soobin)
# Mixed Effect Model
anova <- aov(score ~ (group*period) + Error(participant/(group*period)), data = totalAverageC)
summary(anova)
## Original 2-way ANOVA
anova <- aov(percentage ~ (type*phase) + Error(participant/(type*phase)), data = youtubePercentage)
anova <- lmer(percentage ~ 1 + type*phase + (participant/(type*phase)), data=youtubePercentage)
summary(anova)
# Mixed Effect Model
anova <- aov(score ~ (group*period) + Error(participant/(group*period)), data = totalAverageC)
summary(anova)
View(totalAverageRPlot)
View(totalAverageS)
# Mixed Effect Model
anova <- aov(score ~ (group*period) + Error(participant/(group*period)), data = totalAverageC)
summary(anova)
### Mixed Effect Model for Satisfaction
fit <- lmer(score ~ group * period + (1|participant), data = totalAverageS)
soobin <- lme(score ~ group * period, random = ~ 1|participant, data = totalAverageS, na.action=na.omit)
# Get ANOVA Table
anova(fit)
summary(fit)
anova(soobin)
summary(soobin)
# Mixed Effect Model
anova <- aov(score ~ (group*period) + Error(participant/(group*period)), data = totalAverageS)
summary(anova)
View(youtubePercentage)
View(totalAverageS)
library(ggplot2)
library(plyr)
library(dplyr)
### Set File Path for Window Environment
setwd('C:/Users/LeeSooHwan/Desktop/github/byteeVisualization')
### Load Data
# Load
byteeAverage <- read.csv(file = "./data/userEvaluation/revisedData/byteeAverage.csv", header=T, fileEncoding="UTF-8-BOM")
# set Factors
byteeAverage$participant <- as.factor(byteeAverage$participant)
byteeAverage$measure <- as.factor(byteeAverage$measure)
byteeAverage$period <- as.factor(byteeAverage$period)
byteeAverage$score <- as.numeric(byteeAverage$score)
### Box Plot Preparation
# Start Y axis from n
require(scales)
my_trans <- function(from=0)
{
trans <- function(x) x-from
inv <- function(x) x+from
trans_new("myscale", trans, inv,
domain = c(from, Inf))
}
# Elicit each measure from main dataframe
byteeAveragePF <- subset(byteeAverage, measure == 'PF')
byteeAverageSM <- subset(byteeAverage, measure == 'SM')
byteeAverageSS <- subset(byteeAverage, measure == 'SS')
### Drawing Box Plot
# Draw Box Plot for Bytee Average
byteeAverage$score <- as.numeric(byteeAverage$score)
byteeAverage$period <- factor(byteeAverage$period, level = c("first", "second", "third"))
byteeAverage$measure <- factor(byteeAverage$measure, level = c("PF", "SM", "SS"))
periodLabel <- c("First","Second", "Third") # Label should be revised!!!
measureLabel <- c("PF","SM", "SS") # Label should be revised!!!
byteeAveragePlot <- ggplot(byteeAverage, aes(x=period, y=score, fill=measure)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=measureLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = measure), position=position_jitterdodge(), show.legend = F) +
labs(title="Bytee - ARCS", x="Period", y = "Score", fill = "Measure") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
byteeAveragePlot
anova(anova)
# Mixed Effect Model
anova <- aov(score ~ (group*period) + Error(participant/(group*period)), data = totalAverageS)
summary(anova)
anova(anova)
anova
View(byteeAverage)
