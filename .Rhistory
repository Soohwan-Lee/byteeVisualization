library(ggplot2)
library(plyr)
library(dplyr)
library(psy)
library(psych)
library(MVTests)
library(s20x)
### Set File Path for Window Environment
setwd('C:/Users/LeeSooHwan/Desktop/github/byteeVisualization')
### Set File Path for Mac Environment
setwd("/Users/Soohwan/Desktop/github/byteeVisualization")
### Reliability Analysis & Factor Analysis ###
### A
# Cronbach Alpha
A <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/ARCS/totalA.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(A, panel=panel.smooth)
cronbach(A)
alpha(A)
# KMO (Factor Analysis)
KMO(A)
### R
# Cronbach Alpha
R <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/ARCS/totalR.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(R, panel=panel.smooth)
cronbach(R)
alpha(R)
# KMO (Factor Analysis)
KMO(R)
### C
# Cronbach Alpha
C <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/ARCS/totalC.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(C, panel=panel.smooth)
cronbach(C)
alpha(C)
# KMO (Factor Analysis)
KMO(C)
### S
# Cronbach Alpha
S <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/ARCS/totalS.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(S, panel=panel.smooth)
cronbach(S)
alpha(S)
# KMO (Factor Analysis)
KMO(S)
### Load Average Total Data
# Load
totalAverage <- read.csv(file = "./data/userEvaluation/revisedData/totalAverage.csv", header=T, fileEncoding="UTF-8-BOM")
# set Factors
totalAverage$participant <- as.factor(totalAverage$participant)
totalAverage$group <- as.factor(totalAverage$group)
totalAverage$measure <- as.factor(totalAverage$measure)
totalAverage$period <- as.factor(totalAverage$period)
totalAverage$score <- as.numeric(totalAverage$score)
### Box Plot Preparation
# Start Y axis from n
require(scales)
my_trans <- function(from=0)
{
trans <- function(x) x-from
inv <- function(x) x+from
trans_new("myscale", trans, inv,
domain = c(from, Inf))
}
# Elicit each measure from main dataframe
totalAverageA <- subset(totalAverage, measure == 'A')
totalAverageR <- subset(totalAverage, measure == 'R')
totalAverageC <- subset(totalAverage, measure == 'C')
totalAverageS <- subset(totalAverage, measure == 'S')
# Set Factors
totalAverageA$participant <- as.factor(totalAverageA$participant)
### Drawing Box Plot
# Draw Box Plot for A
totalAverageA$score <- as.numeric(totalAverageA$score)
totalAverageA$period <- factor(totalAverageA$period, level = c("first", "second", "third"))
totalAverageA$group <- factor(totalAverageA$group, level = c("control", "experimental"))
periodLabel <- c("Pre-test","Post-test(5th Time)", "Post-test(10th Time)") # Label should be revised!!!
groupLabel <- c("Control Group","Bytee Group") # Label should be revised!!!
totalAverageAPlot <- ggplot(totalAverageA, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Attention", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageAPlot
### Drawing Box Plot
# Draw Box Plot for A
totalAverageA$score <- as.numeric(totalAverageA$score)
totalAverageA$period <- factor(totalAverageA$period, level = c("first", "second", "third"))
totalAverageA$group <- factor(totalAverageA$group, level = c("control", "experimental"))
periodLabel <- c("Pre-test","Post-test(Day 5)", "Post-test(Day 10)") # Label should be revised!!!
groupLabel <- c("Control Group","Bytee Group") # Label should be revised!!!
totalAverageAPlot <- ggplot(totalAverageA, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Attention", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageAPlot
# Draw Box Plot for R
totalAverageR$score <- as.numeric(totalAverageR$score)
totalAverageR$period <- factor(totalAverageR$period, level = c("first", "second", "third"))
totalAverageR$group <- factor(totalAverageR$group, level = c("control", "experimental"))
periodLabel <- c("Pre-test","Post-test(Day 5)", "Post-test(Day 10)") # Label should be revised!!!
groupLabel <- c("Control Group","Bytee Group") # Label should be revised!!!
totalAverageRPlot <- ggplot(totalAverageR, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Relevance", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageRPlot
# Draw Box Plot for C
totalAverageC$score <- as.numeric(totalAverageC$score)
totalAverageC$period <- factor(totalAverageC$period, level = c("first", "second", "third"))
totalAverageC$group <- factor(totalAverageC$group, level = c("control", "experimental"))
periodLabel <- c("Pre-test","Post-test(Day 5)", "Post-test(Day 10)") # Label should be revised!!!
groupLabel <- c("Control Group","Bytee Group") # Label should be revised!!!
totalAverageCPlot <- ggplot(totalAverageC, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Confidence", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageCPlot
# Draw Box Plot for S
totalAverageS$score <- as.numeric(totalAverageS$score)
totalAverageS$period <- factor(totalAverageS$period, level = c("first", "second", "third"))
totalAverageS$group <- factor(totalAverageS$group, level = c("control", "experimental"))
periodLabel <- c("Pre-test","Post-test(Day 5)", "Post-test(Day 10)") # Label should be revised!!!
groupLabel <- c("Control Group","Bytee Group") # Label should be revised!!!
totalAverageSPlot <- ggplot(totalAverageS, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Satisfaction", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageSPlot
### Drawing Box Plot
# Draw Box Plot for A
totalAverageA$score <- as.numeric(totalAverageA$score)
totalAverageA$period <- factor(totalAverageA$period, level = c("first", "second", "third"))
totalAverageA$group <- factor(totalAverageA$group, level = c("control", "experimental"))
periodLabel <- c("Pre-test","Post-test(Day 5)", "Post-test(Day 10)") # Label should be revised!!!
groupLabel <- c("Control Group","Bytee Group") # Label should be revised!!!
totalAverageAPlot <- ggplot(totalAverageA, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Attention", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageAPlot
# Draw Box Plot for R
totalAverageR$score <- as.numeric(totalAverageR$score)
totalAverageR$period <- factor(totalAverageR$period, level = c("first", "second", "third"))
totalAverageR$group <- factor(totalAverageR$group, level = c("control", "experimental"))
periodLabel <- c("Pre-test","Post-test(Day 5)", "Post-test(Day 10)") # Label should be revised!!!
groupLabel <- c("Control Group","Bytee Group") # Label should be revised!!!
totalAverageRPlot <- ggplot(totalAverageR, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Relevance", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageRPlot
# Draw Box Plot for C
totalAverageC$score <- as.numeric(totalAverageC$score)
totalAverageC$period <- factor(totalAverageC$period, level = c("first", "second", "third"))
totalAverageC$group <- factor(totalAverageC$group, level = c("control", "experimental"))
periodLabel <- c("Pre-test","Post-test(Day 5)", "Post-test(Day 10)") # Label should be revised!!!
groupLabel <- c("Control Group","Bytee Group") # Label should be revised!!!
totalAverageCPlot <- ggplot(totalAverageC, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Confidence", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageCPlot
# Draw Box Plot for S
totalAverageS$score <- as.numeric(totalAverageS$score)
totalAverageS$period <- factor(totalAverageS$period, level = c("first", "second", "third"))
totalAverageS$group <- factor(totalAverageS$group, level = c("control", "experimental"))
periodLabel <- c("Pre-test","Post-test(Day 5)", "Post-test(Day 10)") # Label should be revised!!!
groupLabel <- c("Control Group","Bytee Group") # Label should be revised!!!
totalAverageSPlot <- ggplot(totalAverageS, aes(x=period, y=score, fill=group)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=groupLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = group), position=position_jitterdodge(), show.legend = F) +
labs(title="Satisfaction", x="Period", y = "Score", fill = "Group") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
totalAverageSPlot
library(ggplot2)
library(plyr)
library(dplyr)
library(psych)
### Set File Path for Window Environment
setwd('C:/Users/LeeSooHwan/Desktop/github/byteeVisualization')
### Set File Path for Mac Environment
setwd("/Users/Soohwan/Desktop/github/byteeVisualization")
### Reliability Analysis & Factor Analysis
# PF
PF <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/bytee/PF.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(PF, panel=panel.smooth)
cronbach(PF) # Cronbach Alpha
### Drawing Box Plot
# Draw Box Plot for Bytee Average
byteeAverage$score <- as.numeric(byteeAverage$score)
byteeAverage$period <- factor(byteeAverage$period, level = c("first", "second", "third"))
byteeAverage$measure <- factor(byteeAverage$measure, level = c("PF", "SM", "SS"))
periodLabel <- c("1st Time","5th Time", "10th Time") # Label should be revised!!!
measureLabel <- c("Personalized\nVisual Feedback", "Visualization\nof Self-Monitoring", "Social Support\n with Visualization")
measureLabel <- c("Personalized Visual Feedback", "Visualization of Self-Monitoring", "Social Support with Visualization")
measureLabel <- c("Factor A","Factor B", "Factor C") # Label should be revised!!!
byteeAveragePlot <- ggplot(byteeAverage, aes(x=period, y=score, fill=measure)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=measureLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = measure), position=position_jitterdodge(), show.legend = F) +
labs(title="3 Factors of Bytee", x="Period", y = "Score", fill = "Measure") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
byteeAveragePlot
### Drawing Box Plot
# Draw Box Plot for Bytee Average
byteeAverage$score <- as.numeric(byteeAverage$score)
byteeAverage$period <- factor(byteeAverage$period, level = c("first", "second", "third"))
byteeAverage$measure <- factor(byteeAverage$measure, level = c("PF", "SM", "SS"))
periodLabel <- c("1st Time","5th Time", "10th Time") # Label should be revised!!!
measureLabel <- c("Personalized\nVisual Feedback", "Visualization\nof Self-Monitoring", "Social Support\n with Visualization")
measureLabel <- c("Personalized Visual Feedback", "Visualization of Self-Monitoring", "Social Support with Visualization")
measureLabel <- c("Factor A","Factor B", "Factor C") # Label should be revised!!!
byteeAveragePlot <- ggplot(byteeAverage, aes(x=period, y=score, fill=measure)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=measureLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = measure), position=position_jitterdodge(), show.legend = F) +
labs(title="3 Factors of Bytee", x="Period", y = "Score", fill = "Measure") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
byteeAveragePlot
byteeAveragePlot <- ggplot(byteeAverage, aes(x=period, y=score, fill=measure)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=measureLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = measure), position=position_jitterdodge(), show.legend = F) +
labs(title="3 Factors of Bytee", x="Period", y = "Score", fill = "Measure") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
### Load Data
# Load
byteeAverage <- read.csv(file = "./data/userEvaluation/revisedData/byteeAverage.csv", header=T, fileEncoding="UTF-8-BOM")
# set Factors
byteeAverage$participant <- as.factor(byteeAverage$participant)
byteeAverage$measure <- as.factor(byteeAverage$measure)
byteeAverage$period <- as.factor(byteeAverage$period)
byteeAverage$score <- as.numeric(byteeAverage$score)
### Box Plot Preparation
# Start Y axis from n
require(scales)
my_trans <- function(from=0)
{
trans <- function(x) x-from
inv <- function(x) x+from
trans_new("myscale", trans, inv,
domain = c(from, Inf))
}
# Elicit each measure from main dataframe
byteeAveragePF <- subset(byteeAverage, measure == 'PF')
byteeAverageSM <- subset(byteeAverage, measure == 'SM')
byteeAverageSS <- subset(byteeAverage, measure == 'SS')
### Normality Test
shapiro.test(subset(byteeAveragePF, period == 'first')$score)
shapiro.test(subset(byteeAveragePF, period == 'second')$score)
shapiro.test(subset(byteeAveragePF, period == 'third')$score)
shapiro.test(subset(byteeAverageSM, period == 'first')$score)
shapiro.test(subset(byteeAverageSM, period == 'second')$score)
shapiro.test(subset(byteeAverageSM, period == 'third')$score)
shapiro.test(subset(byteeAverageSS, period == 'first')$score)
shapiro.test(subset(byteeAverageSS, period == 'second')$score)
shapiro.test(subset(byteeAverageSS, period == 'third')$score)
### Homogeneity of Variance Test (Levene)
# Test for PF
fitPF <- lm(score ~ period, data = byteeAveragePF)
levene.test(fitPF)
# Test for SM
fitSM <- lm(score ~ period, data = byteeAverageSM)
levene.test(fitSM)
# Test for SS
fitSS <- lm(score ~ period, data = byteeAverageSS)
levene.test(fitSS)
### Drawing Box Plot
# Draw Box Plot for Bytee Average
byteeAverage$score <- as.numeric(byteeAverage$score)
byteeAverage$period <- factor(byteeAverage$period, level = c("first", "second", "third"))
byteeAverage$measure <- factor(byteeAverage$measure, level = c("PF", "SM", "SS"))
periodLabel <- c("1st Time","5th Time", "10th Time") # Label should be revised!!!
measureLabel <- c("Personalized\nVisual Feedback", "Visualization\nof Self-Monitoring", "Social Support\n with Visualization")
measureLabel <- c("Personalized Visual Feedback", "Visualization of Self-Monitoring", "Social Support with Visualization")
measureLabel <- c("Factor A","Factor B", "Factor C") # Label should be revised!!!
byteeAveragePlot <- ggplot(byteeAverage, aes(x=period, y=score, fill=measure)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=measureLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = measure), position=position_jitterdodge(), show.legend = F) +
labs(title="3 Factors of Bytee", x="Period", y = "Score", fill = "Measure") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
byteeAveragePlot
############################
### Mixed Effect Model
# Mixed Effect Model
anova <- aov(score ~ (measure*period) + Error(participant/(measure*period)), data = byteeAverage)
periodLabel <- c("Day 1","Day 5", "Day 10") # Label should be revised!!!
measureLabel <- c("Personalized\nVisual Feedback", "Visualization\nof Self-Monitoring", "Social Support\n with Visualization")
measureLabel <- c("Personalized Visual Feedback", "Visualization of Self-Monitoring", "Social Support with Visualization")
measureLabel <- c("Factor A","Factor B", "Factor C") # Label should be revised!!!
byteeAveragePlot <- ggplot(byteeAverage, aes(x=period, y=score, fill=measure)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=measureLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = measure), position=position_jitterdodge(), show.legend = F) +
labs(title="3 Factors of Bytee", x="Period", y = "Score", fill = "Measure") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
byteeAveragePlot
measureLabel <- c("Personalized Visual Feedback", "Visualization of Self-Monitoring", "Social Support with Visualization")
byteeAveragePlot <- ggplot(byteeAverage, aes(x=period, y=score, fill=measure)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=periodLabel) +
scale_fill_discrete(labels=measureLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5)) +
coord_cartesian(ylim = c(1, 5)) +
geom_point(aes(colour = measure), position=position_jitterdodge(), show.legend = F) +
labs(title="3 Factors of Bytee", x="Period", y = "Score", fill = "Measure") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "bottom")
byteeAveragePlot
############################
### Mixed Effect Model
# Mixed Effect Model
anova <- aov(score ~ (measure*period) + Error(participant/(measure*period)), data = byteeAverage)
library(ggplot2)
library(plyr)
library(dplyr)
library(psych)
### Set File Path for Window Environment
setwd('C:/Users/LeeSooHwan/Desktop/github/byteeVisualization')
### Set File Path for Mac Environment
setwd("/Users/Soohwan/Desktop/github/byteeVisualization")
### Reliability Analysis & Factor Analysis
# YE
YE <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/systemEvaluation/YE.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(YE, panel=panel.smooth)
cronbach(YE) # Cronbach Aplha
alpha(YE) # Cronbach Aplha
KMO(YE) # KMO
# VI
VI <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/systemEvaluation/VI.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(VI, panel=panel.smooth)
cronbach(VI) # Cronbach Aplha
alpha(VI) # Cronbach Aplha
KMO(VI) # KMO
# SE
SE <- read.csv(file = "./data/userEvaluation/revisedData/cronbach/systemEvaluation/SE.csv", header=T, fileEncoding="UTF-8-BOM")
pairs(SE, panel=panel.smooth)
cronbach(SE) # Cronbach Aplha
alpha(SE) # Cronbach Aplha
KMO(SE) # KMO
### Load Data
# Load
systemEvaluationAverage <- read.csv(file = "./data/userEvaluation/revisedData/systemEvaluationAverage.csv", header=T, fileEncoding="UTF-8-BOM")
# set Factors
systemEvaluationAverage$measure <- as.factor(systemEvaluationAverage$measure)
systemEvaluationAverage$score <- as.numeric(systemEvaluationAverage$score)
### Box Plot Preparation
# Start Y axis from n
require(scales)
my_trans <- function(from=0)
{
trans <- function(x) x-from
inv <- function(x) x+from
trans_new("myscale", trans, inv,
domain = c(from, Inf))
}
# Elicit each measure from main dataframe
systemEvaluationAverageYE <- subset(systemEvaluationAverage, measure == 'YE')
systemEvaluationAverageVI <- subset(systemEvaluationAverage, measure == 'VI')
systemEvaluationAverageSE <- subset(systemEvaluationAverage, measure == 'SE')
# Normality Test
shapiro.test(systemEvaluationAverageYE$score)
shapiro.test(systemEvaluationAverageVI$score)
shapiro.test(systemEvaluationAverageSE$score)
### Drawing Box Plot
# Draw Box Plot for System Evaluation
systemEvaluationAverage$score <- as.numeric(systemEvaluationAverage$score)
systemEvaluationAverage$measure <- factor(systemEvaluationAverage$measure, level = c("YE", "VI", "SE"))
measureLabel <- c("Yoga Satisfaction","Visual Imagery", "System Satisfaction") # Label should be revised!!!
systemEvaluationAveragePlot <- ggplot(systemEvaluationAverage, aes(x=measure, y=score, fill = measure)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=measureLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5,6,7)) +
coord_cartesian(ylim = c(1, 7)) +
geom_point(aes(colour = measure), position=position_jitterdodge(), show.legend = F) +
labs(title="System Evaluation", x="Measure", y = "Score") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "")
systemEvaluationAveragePlot
systemEvaluationAveragePlot <- ggplot(systemEvaluationAverage, aes(x=measure, y=score, fill = measure)) +
geom_boxplot(alpha=0.4, outlier.color = 'black',outlier.shape = 2) +
scale_x_discrete(labels=measureLabel) +
scale_y_continuous(trans = my_trans( from=1),breaks = c(1,2,3,4,5,6,7)) +
coord_cartesian(ylim = c(1, 7)) +
geom_point(aes(colour = measure), position=position_jitterdodge(), show.legend = F) +
labs(title="System Evaluation", x="Evaluation Criteria", y = "Score") +
theme(plot.title = element_text(hjust = 0.5), text=element_text(size=15),legend.position = "")
systemEvaluationAveragePlot
### Mann–Whitney U test for Pre-test
wilcox.test(subset(totalAverageA, period == 'first' & group == 'control')$score, subset(totalAverageA, period == 'first' & group == 'experimental')$score)
wilcox.test(subset(totalAverageR, period == 'first' & group == 'control')$score, subset(totalAverageR, period == 'first' & group == 'experimental')$score)
wilcox.test(subset(totalAverageC, period == 'first' & group == 'control')$score, subset(totalAverageC, period == 'first' & group == 'experimental')$score)
wilcox.test(subset(totalAverageS, period == 'first' & group == 'control')$score, subset(totalAverageS, period == 'first' & group == 'experimental')$score)
